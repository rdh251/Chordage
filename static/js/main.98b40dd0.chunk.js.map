{"version":3,"sources":["Header.js","Cards.js","Tab.js","Tabs.js","Selector.js","rootSelector.js","defineChordPanel.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Card1","id","Tab","onClick","_this$props","_this","props","label","this","_this$props2","activeTab","label_arr","split","Tabs","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClickTabItem","tab","setState","state","children","map","child","src_Tab","key","Selector","items","activeIndex","handleScroll","bind","assertThisInitialized","el","document","getElementById","scrollOffset","scrollLeft","itemWidth","offsetWidth","i","console","log","onScroll","RSelect","rootClicker","showRMenu","rootSelector","letter","root","accClicker","showAMenu","accSelector","symbol","accidental","r","_this$state","DCPanel","triOnClick","index","arr","tri_notes","extOnClick","ext_notes","mode","tri_list_items","bool","class_list","ext_list_items","class","src_rootSelector","App","opt","value","window","innerHeight","src_Header","Cards_Card1","src_Selector","src_Tabs","defineChordPanel","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98b40dd0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <h1>Chordage</h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Card1 extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"card1\" className=\"card\"></div>\r\n        );\r\n    }\r\n}\r\nclass Card2 extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"card2\" className=\"card\"></div>\r\n        );\r\n    }\r\n}\r\nclass Card3 extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"card3\" className=\"card\"></div>\r\n        );\r\n    }\r\n}\r\nexport {\r\n    Card1,\r\n    Card2,\r\n    Card3\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'; // data validation\r\n\r\n// FROM:\r\n// https://alligator.io/react/tabs-component/\r\nclass Tab extends Component {\r\n    static propTypes = {\r\n        activeTab: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n    }\r\n    onClick = () => {\r\n        const {label, onClick} = this.props;\r\n        onClick(label);\r\n    }\r\n     \r\n    render() {\r\n        const {\r\n            onClick,\r\n            props: {\r\n                activeTab,\r\n                label,\r\n            },\r\n        } = this;\r\n        let label_arr = label.split(' ');\r\n        \r\n        let className = 'tab-list-item';\r\n\r\n        if (activeTab === label) {\r\n            className += ' tab-list-active';\r\n        }\r\n\r\n        return (\r\n            <li\r\n                className = {className}\r\n                onClick = {onClick}\r\n            ><h6>{label_arr[0]}<br/>{label_arr[1]}</h6></li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tab;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'; // data validation\r\n\r\nimport Tab from './Tab';\r\n\r\n// FROM: \r\n// https://alligator.io/react/tabs-component/\r\nclass Tabs extends Component {\r\n    static propTypes = {\r\n        children: PropTypes.instanceOf(Array).isRequired,\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: this.props.children[0].props.label\r\n        };\r\n    }\r\n\r\n    onClickTabItem = (tab) => {\r\n        this.setState({activeTab: tab});\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onClickTabItem,\r\n            props: {\r\n                children,\r\n            },\r\n            state: {\r\n                activeTab,\r\n            }\r\n        } = this;\r\n\r\n        return (\r\n            <div className = 'tabs'>\r\n                <div className='tab-content'>\r\n                    {children.map((child) => {\r\n                        if (child.props.label !== activeTab) {\r\n                            return undefined;\r\n                        }\r\n                        return child.props.children;\r\n                    })}\r\n                </div>\r\n                <ol className = 'tab-list'>\r\n                    {children.map((child) => {\r\n                        const { label} = child.props;\r\n                        return (\r\n                            <Tab\r\n                                activeTab = {activeTab}\r\n                                key = {label}\r\n                                label = {label}\r\n                                onClick = {onClickTabItem}\r\n                            />\r\n                        );\r\n                    })}\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Tabs;","import React, { Component } from 'react';\r\n\r\nclass Selector extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: 8,\r\n            activeIndex: 0\r\n        }\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n    }\r\n    handleScroll() {\r\n        let el = document.getElementById('chordHolder')\r\n        let scrollOffset = el.scrollLeft;\r\n        let itemWidth = el.offsetWidth / 3.0;\r\n        let i = 0;\r\n        while((i) * itemWidth <= scrollOffset - (itemWidth/2.0)) {\r\n            i++;\r\n        }\r\n        this.state.activeIndex = i;\r\n        console.log(this.state.activeIndex);\r\n        console.log(this.props.children);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <ul id='chordHolder' onScroll={this.handleScroll}>\r\n            <li></li>\r\n            <li>item 0</li>\r\n            <li>item 1</li>\r\n            <li>item 2</li>\r\n            <li>item 3</li>\r\n            <li>item 4</li>\r\n            <li>item 5</li>\r\n            <li>item 6</li>\r\n            <li>item 7</li>\r\n            <li></li>\r\n          </ul>\r\n        );\r\n    }\r\n}\r\nexport default Selector;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'; // data validation\r\n\r\nclass RSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            root: 'C',\r\n            accidental: '\\u266E',\r\n            showRMenu: false,\r\n            showAMenu: false,\r\n        }\r\n    }\r\n    rootClicker = () => {\r\n        this.setState({showRMenu: true});\r\n    }\r\n    rootSelector = (letter) => {\r\n        this.setState({\r\n            root: letter,\r\n            showRMenu: false,\r\n        });\r\n    }\r\n    accClicker = () => {\r\n        this.setState({showAMenu: true});\r\n    }\r\n    accSelector = (symbol) => {\r\n        console.log('WHYYY');\r\n        this.setState({\r\n            accidental: symbol,\r\n            showAMenu: false,\r\n        });\r\n    }\r\n    render() {\r\n        const {\r\n            state: {\r\n                root,\r\n                accidental,\r\n                showRMenu,\r\n                showAMenu\r\n            },\r\n            rootClicker,\r\n            rootSelector,\r\n            accClicker,\r\n            accSelector\r\n        } = this;\r\n        let sharp = '\\u266F';\r\n        let natural = '\\u266E';\r\n        let flat = '\\u266D';\r\n        let r;\r\n        let a;\r\n        if (showRMenu) {\r\n            r = \r\n                <ul id='root-menu'>\r\n                    <li onClick={rootSelector.bind(this, 'A')}>A</li>\r\n                    <li onClick={rootSelector.bind(this, 'B')}>B</li>\r\n                    <li onClick={rootSelector.bind(this, 'C')}>C</li>\r\n                    <li onClick={rootSelector.bind(this, 'D')}>D</li>\r\n                    <li onClick={rootSelector.bind(this, 'E')}>E</li>\r\n                    <li onClick={rootSelector.bind(this, 'F')}>F</li>\r\n                    <li onClick={rootSelector.bind(this, 'G')}>G</li>\r\n                </ul>\r\n        } else {\r\n            r = <div id='the-root' onClick={rootClicker}>{root}</div>\r\n        }\r\n        if (showAMenu) {\r\n            a = \r\n                <ul id='accidental-menu'>\r\n                    <li onClick={accSelector.bind(this, sharp)}>{sharp}</li>\r\n                    <li onClick={accSelector.bind(this, natural)}>{natural}</li>\r\n                    <li onClick={accSelector.bind(this, flat)}>{flat}</li>\r\n                </ul>\r\n        } else {\r\n            a = <div id='the-accidental' onClick={accClicker}>{accidental}</div>\r\n        }\r\n        return(\r\n            <div id='root-container'>\r\n                {r}\r\n                {a}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RSelect;","import React, { Component } from 'react';\r\nimport RSelect from './rootSelector.js';\r\nimport PropTypes from 'prop-types'; // data validation\r\n\r\nclass DCPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            root: 'C',\r\n            accidental: '=',\r\n            mode: 'Aeolian',\r\n            tri_notes: [true, true, false],\r\n            ext_notes: [false, false, false, true]\r\n        }\r\n    }\r\n    triOnClick = (index) => {\r\n        let arr = this.state.tri_notes;\r\n        arr[index] = !arr[index];\r\n        this.setState({tri_notes: arr})\r\n        console.log(index);\r\n    }\r\n    extOnClick = (index) => {\r\n        let arr = this.state.ext_notes;\r\n        arr[index] = !arr[index];\r\n        this.setState({ext_notes: arr})\r\n        console.log(index);\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            triOnClick,\r\n            extOnClick\r\n        } = this\r\n        const tri_list_items = this.state.tri_notes.map(function(bool, index){\r\n            let class_list=\"\"\r\n            if (bool) {\r\n                class_list += 'selected-note';\r\n            } \r\n            return <li \r\n                className={class_list}\r\n                key={index}\r\n                onClick = {triOnClick.bind(this, index)}> <h6>{index * 2 + 1}</h6> </li>\r\n        });\r\n        const ext_list_items = this.state.ext_notes.map(function(bool, index){\r\n            let class_list=\"\"\r\n            if (bool) {\r\n                class_list += 'selected-note';\r\n            } \r\n            return <li \r\n                className={class_list}\r\n                key={index}\r\n                onClick = {extOnClick.bind(this, index)}> <h6>{index * 2 + 7}</h6> </li>\r\n        });\r\n\r\n        return (\r\n            <div class='panel-wrap'>\r\n                <div id='root'>\r\n                    <h3>Root:</h3>\r\n                    <RSelect />\r\n                </div>\r\n                <div id='mode'>\r\n                    <h3>Mode:</h3>\r\n                </div>\r\n                <div id='triad'>\r\n                    <h3><span>Triad:</span></h3>\r\n                    <ul id='tri-list'>\r\n                        {tri_list_items}\r\n                    </ul>\r\n                </div>\r\n                <div id='extensions'>\r\n                <h3><span>Ext:</span></h3>\r\n                <ul id='ext-list'>\r\n                    {ext_list_items}\r\n                </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DCPanel;\r\n\r\n/*\r\n        <ul id='tri-list'>\r\n            <li id='one'>1</li>\r\n            <li id='three'>3</li>\r\n            <li id='five'>5</li>\r\n        </ul>\r\n*/\r\n\r\n/*\r\n        makeTriList = () => {\r\n            this.state.tri_notes.map(function(bool, index){\r\n                let class_list=\"\"\r\n                if (bool) {\r\n                    class_list += 'selected-note';\r\n                } \r\n                return <li \r\n                    className={class_list}\r\n                    label={index}\r\n                    onClick = {liOnClick}> {index * 2 + 1} </li>\r\n            });\r\n        }\r\n        makeExtList = () => {\r\n            this.state.ext_notes.map(function(bool, index){\r\n                let class_list=\"\"\r\n                if (bool) {\r\n                    class_list += 'selected-note';\r\n                } \r\n                return <li \r\n                    className={class_list}\r\n                    label={index}\r\n                    onClick = {liOnClick}> {index * 2 + 7} </li>\r\n            });\r\n        }\r\n        tri_list_items = makeTriList();\r\n        ext_list_items = makeExtList();\r\n*/","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport Header from './Header.js';\nimport Cards, {Card1, Card2, Card3} from './Cards.js';\nimport Tabs from './Tabs.js';\nimport Selector from './Selector.js';\nimport DCPanel from './defineChordPanel.js';\nimport './App.css';\n\nconst letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\nlet letter_options = letters.map(opt => ({label: opt, value: opt}));\n\nclass App extends Component {\n  render() {\n    console.log(window.innerHeight);\n    return (\n      <div className=\"Wrapper\">\n        <Header />\n        <div id='topCardHolder'>\n          <Card1 />\n        </div>\n        <div id=\"chordBackdrop\"></div>\n        <div id=\"slide\">\n          <div id='spacer'></div>\n          <div id='triHolder'>\n            <div id='triangle'></div>\n          </div>\n          <div id='description'>\n            <Selector />\n            <Tabs>\n              <div id='define' label='Define Chord'>\n                <DCPanel />\n              </div>\n              <div id='set' label='Set Note'>\n                In a while!\n              </div>\n              <div id='search' label='Search Space'>\n                Sticks!\n              </div> \n            </Tabs>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n/*\n          <div id='botCardHolder'>\n            <Card2 />\n          </div>\n*/\n/*\n<div id='panelWrap'>\n<div id='panel1'>\n  <div id='root'></div>\n  <div id='mode'></div>\n  <div id='triad'></div>\n  <div id='extensions'></div>\n</div>\n<div id='panel2' className='hide'></div>\n<div id='panel3' className='hide'></div>\n</div>\n<ul id='panelNav'>\n<li><h6>Chord<br/>Description</h6></li>\n<li><h6>Set<br/>Note</h6></li>\n<li><h6>Search<br/>Space</h6></li>\n</ul>\n*/\n\n/*\n                  <Select \n                    options={letter_options}\n                    onChange={opt => console.log(opt.value)}\n                    className={'root'}\n                    classNamePrefix={'rooter'}\n                    styles={\n                      {option: (state) => ({\n                        borderBottom: '2px solid red',\n                        height: '50%',\n                        color: 'black',\n                      }),\n                      valueContainer:(state) => ({\n                        overflow: 'scroll',\n                      })\n\n                    }\n                    }\n\n                  /> */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}