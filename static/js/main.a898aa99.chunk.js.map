{"version":3,"sources":["Header.js","Tab.js","Cards.js","Tabs.js","constants/actionTypes.js","constants/music.js","classes/generalChord.js","reducers/index.js","store/index.js","Selector.js","actions/index.js","rootSelector.js","modeSelector.js","triSelector.js","extSelector.js","defineChordPanel.js","chordTab.js","chordViz.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Tab","onClick","_this$props","_this","props","label","this","_this$props2","activeTab","label_arr","split","Tabs","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClickTabItem","tab","setState","state","children","map","child","src_Tab","key","ADD_CHORD","CHANGE_ACTIVE_INDEX","CHANGE_ROOT","CHANGE_ACCIDENTAL","CHANGE_MODE","CHANGE_TRI_NOTES","CHANGE_EXT_NOTES","A","NATURAL","IONIAN","general_chord","root","accidental","mode","tri_notes","ext_notes","createClass","value","string_name","k","i","generalCopy","clone","old","chord1","chord2","chord3","chord4","initialState","active_index","chords","theReducer","arguments","length","undefined","action","type","assign","concat","payload","copy_me","the_clone","new_arr","slice","store","createStore","connected_Selector","handleScroll","bind","assertThisInitialized","el","document","getElementById","scrollOffset","scrollLeft","itemWidth","offsetWidth","dispatch","id","onScroll","index","getNameAsString","Selector","connect","connected_RSelect","rootClicker","showRMenu","rootSelector","letter","accClicker","showAMenu","accSelector","symbol","r","_this$state","RSelect","connected_MSelect","modeClicker","showMenu","modeSelector","string","MSelect","connected_TSelect","triItemOnClick","arr","console","log","tri_list_items","bool","class_list","TSelect","connected_ESelect","extItemOnClick","ext_list_items","ESelect","DCPanel","class","src_rootSelector","src_modeSelector","triSelector","extSelector","ChordTab","x_coords","push","y_coords","fret_number","fret_x1","fret_x2","style","width","height","x1","y1","x2","y2","stroke","cx","cy","fill","ChordViz","border","viewbox","chordTab","App","opt","window","innerHeight","src_Header","chordViz","src_Selector","src_Tabs","defineChordPanel","Boolean","location","hostname","match","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a898aa99.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <h1>Chordage</h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'; // data validation\r\n\r\n// FROM:\r\n// https://alligator.io/react/tabs-component/\r\nclass Tab extends Component {\r\n    static propTypes = {\r\n        activeTab: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n    }\r\n    onClick = () => {\r\n        const {label, onClick} = this.props;\r\n        onClick(label);\r\n    }\r\n     \r\n    render() {\r\n        const {\r\n            onClick,\r\n            props: {\r\n                activeTab,\r\n                label,\r\n            },\r\n        } = this;\r\n        let label_arr = label.split(' ');\r\n        \r\n        let className = 'tab-list-item';\r\n\r\n        if (activeTab === label) {\r\n            className += ' tab-list-active';\r\n        }\r\n\r\n        return (\r\n            <li\r\n                className = {className}\r\n                onClick = {onClick}\r\n            ><h6>{label_arr[0]}<br/>{label_arr[1]}</h6></li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tab;\r\n","import React, { Component } from 'react';\r\n\r\nclass Card1 extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"card1\" className=\"card\"></div>\r\n        );\r\n    }\r\n}\r\nclass Card2 extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"card2\" className=\"card\"></div>\r\n        );\r\n    }\r\n}\r\nclass Card3 extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"card3\" className=\"card\"></div>\r\n        );\r\n    }\r\n}\r\nexport {\r\n    Card1,\r\n    Card2,\r\n    Card3\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'; // data validation\r\n\r\nimport Tab from './Tab';\r\n\r\n// FROM: \r\n// https://alligator.io/react/tabs-component/\r\nclass Tabs extends Component {\r\n    static propTypes = {\r\n        children: PropTypes.instanceOf(Array).isRequired,\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: this.props.children[0].props.label\r\n        };\r\n    }\r\n\r\n    onClickTabItem = (tab) => {\r\n        this.setState({activeTab: tab});\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onClickTabItem,\r\n            props: {\r\n                children,\r\n            },\r\n            state: {\r\n                activeTab,\r\n            }\r\n        } = this;\r\n\r\n        return (\r\n            <div className = 'tabs'>\r\n                <div className='tab-content'>\r\n                    {children.map((child) => {\r\n                        if (child.props.label !== activeTab) {\r\n                            return undefined;\r\n                        }\r\n                        return child.props.children;\r\n                    })}\r\n                </div>\r\n                <ol className = 'tab-list'>\r\n                    {children.map((child) => {\r\n                        const { label} = child.props;\r\n                        return (\r\n                            <Tab\r\n                                activeTab = {activeTab}\r\n                                key = {label}\r\n                                label = {label}\r\n                                onClick = {onClickTabItem}\r\n                            />\r\n                        );\r\n                    })}\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Tabs;","export const ADD_CHORD = 'ADD_CHORD';\r\nexport const CHANGE_ACTIVE_INDEX = 'CHANGE_ACTIVE_INDEX';\r\nexport const CHANGE_ROOT = 'CHANGE_ROOT';\r\nexport const CHANGE_ACCIDENTAL = 'CHANGE_ACCIDENTAL';\r\nexport const CHANGE_MODE = 'CHANGE_MODE';\r\nexport const CHANGE_TRI_NOTES = 'CHANGE_TRI_NOTES';\r\nexport const CHANGE_EXT_NOTES = 'CHANGE_EXT_NOTES';\r\n","/* Notes ******************************/\r\nexport const A = 'A';\r\nexport const B = 'B';\r\nexport const C = 'C';\r\nexport const D = 'D';\r\nexport const E = 'E';\r\nexport const F = 'F';\r\nexport const G = 'G';\r\n\r\n/* Accidentals *************************/\r\nexport const SHARP = '\\u266F';\r\nexport const NATURAL = '\\u266E';\r\nexport const FLAT = '\\u266D';\r\n\r\n/* Modes *******************************/\r\nexport const IONIAN = 'Ionian';\r\nexport const DORIAN = 'Dorian';\r\nexport const PHRYGIAN = 'Phrygian';\r\nexport const LYDIAN = 'Lydian';\r\nexport const MIXOLYDIAN = 'Mixolydian';\r\nexport const AEOLIAN = 'Aeolian';\r\nexport const LOCRIAN = 'Locrian';","import {\r\n    A,\r\n    B,\r\n    C,\r\n    D,\r\n    E,\r\n    F,\r\n    G,\r\n    SHARP,\r\n    NATURAL,\r\n    FLAT,\r\n    IONIAN,\r\n    DORIAN,\r\n    PHRYGIAN,\r\n    LYDIAN,\r\n    MIXOLYDIAN,\r\n    AEOLIAN,\r\n    LOCRIAN,\r\n} from '../constants/music'\r\n\r\nexport class general_chord {\r\n    constructor() {\r\n        this.root = A;\r\n        this.accidental = NATURAL \r\n        this.mode = IONIAN;\r\n        this.tri_notes = [true, true, false];\r\n        this.ext_notes = [true, false, false, false];\r\n    }\r\n    getNameAsString() {\r\n        let string_name = this.root\r\n        if (this.accidental !== NATURAL) {\r\n            string_name += this.accidental;\r\n        }\r\n        if (this.mode === IONIAN ||\r\n            this.mode === LYDIAN) {\r\n                string_name += 'maj';\r\n        } else if (this.mode === MIXOLYDIAN) {\r\n            string_name += 'dom';\r\n        } else if (this.mode === LOCRIAN) {\r\n            string_name += 'dim';\r\n        }\r\n        else {\r\n            string_name += 'min'\r\n        }\r\n        let k = 0;\r\n        for (let i = 7; i <= 13; i += 2) {\r\n            if (this.ext_notes[k]) {\r\n                string_name = string_name + ' ' + i;\r\n            }\r\n            k++;\r\n        }\r\n        return string_name;\r\n    }\r\n}\r\nexport function generalCopy(clone, old) {\r\n    clone.root = old.root;\r\n    clone.accidental = old.accidental;\r\n    clone.mode = old.mode;\r\n    clone.tri_notes = old.tri_notes;\r\n    clone.ext_notes = old.ext_notes;\r\n}","import { \r\n    ADD_CHORD,\r\n    CHANGE_ACTIVE_INDEX,\r\n    CHANGE_ROOT, \r\n    CHANGE_ACCIDENTAL,\r\n    CHANGE_MODE,\r\n    CHANGE_TRI_NOTES,\r\n    CHANGE_EXT_NOTES\r\n} from \"../constants/actionTypes.js\";\r\nimport { general_chord, generalCopy } from '../classes/generalChord.js';\r\n\r\nlet chord1 = new general_chord;\r\nlet chord2 = new general_chord;\r\nlet chord3 = new general_chord;\r\nlet chord4 = new general_chord;\r\n\r\nchord2.root = 'B';\r\nchord3.root = 'C';\r\nchord4.root = 'D';\r\n\r\n\r\nconst initialState = {\r\n    active_index: 0,\r\n    chords: [chord1, chord2, chord3, chord4],\r\n};\r\n\r\nfunction theReducer(state = initialState, action) {\r\n    if (action.type === ADD_CHORD) {\r\n        return Object.assign({}, state, {\r\n            chords: state.chords.concat(action.payload)\r\n        });\r\n    } else if (action.type === CHANGE_ACTIVE_INDEX) {\r\n        return Object.assign({}, state, {\r\n            active_index: action.payload,\r\n        });\r\n    } else if (action.type === CHANGE_ROOT) {\r\n        let copy_me = state.chords[state.active_index];\r\n        let the_clone = new general_chord;\r\n        generalCopy(the_clone, copy_me);\r\n        the_clone.root = action.payload;\r\n\r\n        let new_arr = state.chords.slice();\r\n        new_arr[state.active_index] = the_clone;\r\n\r\n        return Object.assign({}, state, {\r\n            chords: new_arr,\r\n        });\r\n    } else if (action.type === CHANGE_ACCIDENTAL) {\r\n        let copy_me = state.chords[state.active_index];\r\n        let the_clone = new general_chord;\r\n        generalCopy(the_clone, copy_me);\r\n        the_clone.accidental = action.payload;\r\n\r\n        let new_arr = state.chords.slice();\r\n        new_arr[state.active_index] = the_clone;\r\n\r\n        return Object.assign({}, state, {\r\n            chords: new_arr,\r\n        });\r\n    } else if (action.type === CHANGE_MODE){\r\n        let copy_me = state.chords[state.active_index];\r\n        let the_clone = new general_chord;\r\n        generalCopy(the_clone, copy_me);\r\n        the_clone.mode = action.payload;\r\n\r\n        let new_arr = state.chords.slice();\r\n        new_arr[state.active_index] = the_clone;\r\n\r\n        return Object.assign({}, state, {\r\n            chords: new_arr,\r\n        });\r\n    } else if (action.type === CHANGE_TRI_NOTES) {\r\n        let copy_me = state.chords[state.active_index];\r\n        let the_clone = new general_chord;\r\n        generalCopy(the_clone, copy_me);\r\n        the_clone.tri_notes = action.payload;\r\n        \r\n\r\n        let new_arr = state.chords.slice();\r\n        new_arr[state.active_index] = the_clone;\r\n\r\n        return Object.assign({}, state, {\r\n            chords: new_arr,\r\n        });\r\n    } else if (action.type === CHANGE_EXT_NOTES) {\r\n        let copy_me = state.chords[state.active_index];\r\n        let the_clone = new general_chord;\r\n        generalCopy(the_clone, copy_me);\r\n        the_clone.ext_notes = action.payload;\r\n        \r\n\r\n        let new_arr = state.chords.slice();\r\n        new_arr[state.active_index] = the_clone;\r\n\r\n        return Object.assign({}, state, {\r\n            chords: new_arr,\r\n        });\r\n    }\r\n    return state;\r\n};\r\n\r\nexport default theReducer;","import { createStore } from \"redux\";\r\nimport theReducer from \"../reducers/index\";\r\n\r\nconst store = createStore(theReducer);\r\nexport default store;","import React, { Component } from 'react';\r\nimport store from './store/index.js';\r\nimport {connect} from 'react-redux';\r\nimport theReducer from './reducers/index.js';\r\nimport { changeActiveIndex } from './actions/index.js';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        chords: state.chords,\r\n        active_index: state.active_index\r\n    }\r\n}\r\n\r\nclass connected_Selector extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n    }\r\n    handleScroll() {\r\n        let el = document.getElementById('chordHolder')\r\n        let scrollOffset = el.scrollLeft;\r\n        let itemWidth = el.offsetWidth / 3.0;\r\n        let i = 0;\r\n        while ((i) * itemWidth <= scrollOffset - (itemWidth/2.0)) {\r\n            i++;\r\n        }\r\n        if (i !== this.props.active_index) {\r\n            store.dispatch( changeActiveIndex(i) );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {props: {\r\n                chords,\r\n                active_index,\r\n            },\r\n            handleScroll\r\n        } = this;\r\n        return (\r\n            <ul id='chordHolder' onScroll={handleScroll}>\r\n                <li></li>\r\n                {chords.map((child, index) => {\r\n                    if (index === active_index) { \r\n                        return (<li className='selected'><h6>{child.getNameAsString()}</h6></li>);\r\n                    } else {\r\n                        return (<li><h6>{child.getNameAsString()}</h6></li>);\r\n                    }\r\n                })}\r\n                <li></li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\nconst Selector = connect(mapStateToProps)(connected_Selector); \r\nexport default Selector;\r\n","import { \r\n    ADD_CHORD,\r\n    CHANGE_ACTIVE_INDEX,\r\n    CHANGE_ROOT,\r\n    CHANGE_ACCIDENTAL,\r\n    CHANGE_MODE,\r\n    CHANGE_TRI_NOTES,\r\n    CHANGE_EXT_NOTES\r\n } from \"../constants/actionTypes.js\";\r\n\r\nexport function addChord(the_stuff) {\r\n    return { \r\n        type: ADD_CHORD, \r\n        payload: the_stuff \r\n    };\r\n}\r\nexport function changeActiveIndex(the_stuff) {\r\n    return { \r\n        type: CHANGE_ACTIVE_INDEX, \r\n        payload: the_stuff \r\n    };\r\n}\r\nexport function changeRoot(the_stuff) {\r\n    return {\r\n        type: CHANGE_ROOT,\r\n        payload: the_stuff\r\n    }\r\n}\r\nexport function changeAccidental(the_stuff) {\r\n    return {\r\n        type: CHANGE_ACCIDENTAL,\r\n        payload: the_stuff\r\n    }\r\n}\r\nexport function changeMode(the_stuff) {\r\n    return {\r\n        type: CHANGE_MODE,\r\n        payload: the_stuff\r\n    }\r\n}\r\nexport function changeTriNotes(the_stuff) {\r\n    return {\r\n        type: CHANGE_TRI_NOTES,\r\n        payload: the_stuff\r\n    }\r\n}\r\nexport function changeExtNotes(the_stuff) {\r\n    return {\r\n        type: CHANGE_EXT_NOTES,\r\n        payload: the_stuff\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport store from './store/index.js';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    changeRoot,\r\n    changeAccidental\r\n} from './actions/index.js'\r\n\r\nimport PropTypes from 'prop-types'; // data validation\r\nimport {A, \r\n    B, \r\n    C, \r\n    D, \r\n    E, \r\n    F, \r\n    G,\r\n    SHARP,\r\n    NATURAL,\r\n    FLAT} from './constants/music.js';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        root: state.chords[state.active_index].root,\r\n        accidental: state.chords[state.active_index].accidental\r\n    }\r\n}\r\n/*function mapDispatchToProps(dispatch) {\r\n    return {\r\n        changeRoot: root => dispatch(changeRoot(root))\r\n    },\r\n}*/\r\n\r\nclass connected_RSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n/*            active_index: store.getState().active_index,\r\n            root: store.getState().chords[ store.getState().active_index ].root,*/\r\n            /*accidental: store.getState().chords[ store.getState().active_index ].accidental,*/\r\n            showRMenu: false,\r\n            showAMenu: false,\r\n        }\r\n    }\r\n    rootClicker = () => {\r\n        this.setState({showRMenu: true});\r\n    }\r\n    rootSelector = (letter) => {\r\n        this.setState({\r\n            showRMenu: false,\r\n        });\r\n        store.dispatch(changeRoot(letter))\r\n    }\r\n    accClicker = () => {\r\n        this.setState({showAMenu: true});\r\n    }\r\n    accSelector = (symbol) => {\r\n        this.setState({\r\n            showAMenu: false,\r\n        });\r\n        store.dispatch(changeAccidental(symbol))\r\n    }\r\n    render() {\r\n        const {\r\n            props: {\r\n                root,\r\n                accidental\r\n            },\r\n            state: {\r\n                showRMenu,\r\n                showAMenu\r\n            },\r\n            rootClicker,\r\n            rootSelector,\r\n            accClicker,\r\n            accSelector\r\n        } = this;\r\n        let r;\r\n        let a;\r\n        if (showRMenu) {\r\n            r = \r\n                <ul id='root-menu'>\r\n                    <li onClick={rootSelector.bind(this, A)}><h6>{A}</h6></li>\r\n                    <li onClick={rootSelector.bind(this, B)}><h6>{B}</h6></li>\r\n                    <li onClick={rootSelector.bind(this, C)}><h6>{C}</h6></li>\r\n                    <li onClick={rootSelector.bind(this, D)}><h6>{D}</h6></li>\r\n                    <li onClick={rootSelector.bind(this, E)}><h6>{E}</h6></li>\r\n                    <li onClick={rootSelector.bind(this, F)}><h6>{F}</h6></li>\r\n                    <li onClick={rootSelector.bind(this, G)}><h6>{G}</h6></li>\r\n                </ul>\r\n        } else {\r\n            r = <div id='the-root' onClick={rootClicker}><h6>{root}</h6></div>\r\n        }\r\n        if (showAMenu) {\r\n            a = \r\n                <ul id='accidental-menu'>\r\n                    <li onClick={accSelector.bind(this, SHARP)}><h6>{SHARP}</h6></li>\r\n                    <li onClick={accSelector.bind(this, NATURAL)}><h6>{NATURAL}</h6></li>\r\n                    <li onClick={accSelector.bind(this, FLAT)}><h6>{FLAT}</h6></li>\r\n                </ul>\r\n        } else {\r\n            a = <div id='the-accidental' onClick={accClicker}><h6>{accidental}</h6></div>\r\n        }\r\n        return(\r\n            <div id='root-container'>\r\n                {r}\r\n                {a}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst RSelect = connect(mapStateToProps)(connected_RSelect); \r\nexport default RSelect;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {changeMode} from './actions/index.js'\r\nimport {IONIAN, \r\n    DORIAN, \r\n    PHRYGIAN, \r\n    LYDIAN, \r\n    MIXOLYDIAN, \r\n    AEOLIAN, \r\n    LOCRIAN} from './constants/music.js';\r\nimport PropTypes from 'prop-types'; // data validation\r\nimport store from './store/index.js';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        mode: state.chords[state.active_index].mode,\r\n    }\r\n}\r\n\r\nclass connected_MSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showMenu: false,\r\n        }\r\n    }\r\n    modeClicker = () => {\r\n        this.setState({showMenu: true});\r\n    }\r\n    modeSelector = (string) => {\r\n        this.setState({\r\n            showMenu: false,\r\n        });\r\n        store.dispatch(changeMode(string))\r\n    }\r\n    render() {\r\n        const {\r\n            props: {\r\n                mode\r\n            },\r\n            state: {\r\n                showMenu,\r\n            },\r\n            modeClicker,\r\n            modeSelector,\r\n        } = this;\r\n        \r\n        if (!showMenu) {\r\n            return(    \r\n              <div id='mode-container'>\r\n                <div id='the-mode' onClick={modeClicker}><h6>{mode}</h6></div>\r\n              </div>  \r\n            );\r\n        } else {\r\n            return(\r\n                <div id='mode-container'>\r\n                    <ul id='mode-list'>\r\n                        <li onClick={modeSelector.bind(this, IONIAN)}><h6>{IONIAN}</h6></li>\r\n                        <li onClick={modeSelector.bind(this, DORIAN)}><h6>{DORIAN}</h6></li>\r\n                        <li onClick={modeSelector.bind(this, PHRYGIAN)}><h6>{PHRYGIAN}</h6></li>\r\n                        <li onClick={modeSelector.bind(this, LYDIAN)}><h6>{LYDIAN}</h6></li>\r\n                        <li onClick={modeSelector.bind(this, MIXOLYDIAN)}><h6>{MIXOLYDIAN}</h6></li>\r\n                        <li onClick={modeSelector.bind(this, AEOLIAN)}><h6>{AEOLIAN}</h6></li>\r\n                        <li onClick={modeSelector.bind(this, LOCRIAN)}><h6>{LOCRIAN}</h6></li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nconst MSelect = connect(mapStateToProps)(connected_MSelect); \r\nexport default MSelect;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {changeTriNotes} from './actions/index.js'\r\nimport PropTypes from 'prop-types'; // data validation\r\nimport store from './store/index.js';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tri_notes: state.chords[state.active_index].tri_notes,\r\n    }\r\n}\r\n\r\nclass connected_TSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    triItemOnClick = (index) => {\r\n        let arr = this.props.tri_notes.slice();\r\n        for (let i= 0; i < arr.length; i++) {\r\n        }\r\n        arr[index] = !arr[index];\r\n        store.dispatch(changeTriNotes(arr));\r\n    }\r\n    render() {\r\n        const {\r\n            props: {\r\n                tri_notes\r\n            },\r\n            triItemOnClick\r\n        } = this\r\n        console.log(tri_notes);\r\n        const tri_list_items = tri_notes.map(function(bool, index){\r\n            let class_list=\"\"\r\n            if (bool) {\r\n                class_list += 'selected-note';\r\n            } \r\n            return <li \r\n                className={class_list}\r\n                key={index}\r\n                onClick = {triItemOnClick.bind(this, index)}> <h6>{index * 2 + 1}</h6> </li>\r\n        });\r\n        return (\r\n            <ul id='tri-list'>\r\n                {tri_list_items}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\nconst TSelect = connect(mapStateToProps)(connected_TSelect); \r\nexport default TSelect;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {changeExtNotes} from './actions/index.js'\r\nimport PropTypes from 'prop-types'; // data validation\r\nimport store from './store/index.js';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ext_notes: state.chords[state.active_index].ext_notes,\r\n    }\r\n}\r\n\r\nclass connected_ESelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    extItemOnClick = (index) => {\r\n        let arr = this.props.ext_notes.slice();\r\n        arr[index] = !arr[index];\r\n        store.dispatch(changeExtNotes(arr));\r\n    }\r\n    render() {\r\n        const {\r\n            props: {\r\n                ext_notes\r\n            },\r\n            extItemOnClick\r\n        } = this\r\n\r\n        const ext_list_items = ext_notes.map(function(bool, index){\r\n            let class_list=\"\"\r\n            if (bool) {\r\n                class_list += 'selected-note';\r\n            } \r\n            return <li \r\n                className={class_list}\r\n                key={index}\r\n                onClick = {extItemOnClick.bind(this, index)}> <h6>{index * 2 + 7}</h6> </li>\r\n        });\r\n        return (\r\n            <ul id='ext-list'>\r\n                {ext_list_items}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\nconst ESelect = connect(mapStateToProps)(connected_ESelect); \r\nexport default ESelect;\r\n","import React, { Component } from 'react';\r\nimport RSelect from './rootSelector.js';\r\nimport MSelect from './modeSelector.js';\r\nimport TSelect from './triSelector.js';\r\nimport ESelect from './extSelector.js';\r\nimport PropTypes from 'prop-types'; // data validation\r\n\r\nclass DCPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n /*       this.state = {\r\n            root: 'C',\r\n            accidental: '=',\r\n            mode: 'Aeolian',\r\n            tri_notes: [true, true, false],\r\n            ext_notes: [true, false, false, false]\r\n        }*/\r\n    }\r\n    /*triOnClick = (index) => {\r\n        let arr = this.state.tri_notes;\r\n        arr[index] = !arr[index];\r\n        this.setState({tri_notes: arr})\r\n        console.log(index);\r\n    }*/\r\n   /* extOnClick = (index) => {\r\n        let arr = this.state.ext_notes;\r\n        arr[index] = !arr[index];\r\n        this.setState({ext_notes: arr})\r\n        console.log(index);\r\n    }*/\r\n\r\n    render() {\r\n       /* const {\r\n            triOnClick,\r\n            extOnClick\r\n        } = this*/\r\n       /* const tri_list_items = this.state.tri_notes.map(function(bool, index){\r\n            let class_list=\"\"\r\n            if (bool) {\r\n                class_list += 'selected-note';\r\n            } \r\n            return <li \r\n                className={class_list}\r\n                key={index}\r\n                onClick = {triOnClick.bind(this, index)}> <h6>{index * 2 + 1}</h6> </li>\r\n        });*/\r\n        /*const ext_list_items = this.state.ext_notes.map(function(bool, index){\r\n            let class_list=\"\"\r\n            if (bool) {\r\n                class_list += 'selected-note';\r\n            } \r\n            return <li \r\n                className={class_list}\r\n                key={index}\r\n                onClick = {extOnClick.bind(this, index)}> <h6>{index * 2 + 7}</h6> </li>\r\n        });*/\r\n\r\n        return (\r\n            <div class='panel-wrap'>\r\n                <div id='root'>\r\n                    <h3>Root:</h3>\r\n                    <RSelect />\r\n                </div>\r\n                <div id='mode'>\r\n                    <h3>Mode:</h3>\r\n                    <MSelect />\r\n                </div>\r\n                <div id='triad'>\r\n                    <h3><span>Triad:</span></h3>\r\n                    <TSelect />\r\n                </div>\r\n                <div id='extensions'>\r\n                    <h3><span>Ext:</span></h3>\r\n                    <ESelect />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DCPanel;\r\n\r\n/*\r\n        <ul id='tri-list'>\r\n            <li id='one'>1</li>\r\n            <li id='three'>3</li>\r\n            <li id='five'>5</li>\r\n        </ul>\r\n*/\r\n\r\n/*\r\n        makeTriList = () => {\r\n            this.state.tri_notes.map(function(bool, index){\r\n                let class_list=\"\"\r\n                if (bool) {\r\n                    class_list += 'selected-note';\r\n                } \r\n                return <li \r\n                    className={class_list}\r\n                    label={index}\r\n                    onClick = {liOnClick}> {index * 2 + 1} </li>\r\n            });\r\n        }\r\n        makeExtList = () => {\r\n            this.state.ext_notes.map(function(bool, index){\r\n                let class_list=\"\"\r\n                if (bool) {\r\n                    class_list += 'selected-note';\r\n                } \r\n                return <li \r\n                    className={class_list}\r\n                    label={index}\r\n                    onClick = {liOnClick}> {index * 2 + 7} </li>\r\n            });\r\n        }\r\n        tri_list_items = makeTriList();\r\n        ext_list_items = makeExtList();\r\n*/","\r\nimport React, { Component } from 'react';\r\nimport store from './store/index.js';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n} from './actions/index.js'\r\nimport PropTypes from 'prop-types'; // data validation\r\nimport {A, \r\n    B, \r\n    C, \r\n    D, \r\n    E, \r\n    F, \r\n    G,\r\n    SHARP,\r\n    NATURAL,\r\n    FLAT} from './constants/music.js';\r\n\r\nclass ChordTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        let string_number = 6;\r\n        let string_span = 100/(string_number + 1);\r\n\r\n        let x_coords = [];\r\n        for (let i = 0; i < string_number; i++) {\r\n            x_coords.push(((i+1) * string_span) +'%');\r\n        }\r\n        let fret_number = 5;\r\n        let fret_span =  100/(fret_number + 1);\r\n        let y_coords = [];\r\n        for (let i = 0; i < fret_number + 1; i++) {\r\n            y_coords.push(((i+1) * fret_span) + '%');\r\n        }\r\n        let fret_x1 = (fret_span - 7) + '%'\r\n        let fret_x2 = ((fret_span * (string_number-1)) + 7) + '%';\r\n\r\n        let circle_radius = (string_span / 2.1);\r\n        let radius_str = circle_radius +'%';\r\n        let x_coord = string_span*3 + '%'/*string_span * 6 + '%';*/\r\n        let y_coord = fret_span*5 + '%';\r\n        \r\n        console.log('x*************************')\r\n        console.log (x_coords);\r\n        console.log(x_coord);\r\n        console.log('y**********************')\r\n        console.log(y_coord);\r\n        console.log(y_coords);\r\n\r\n        return(\r\n                <svg style={{width:'100%', height:'100%'}}>\r\n                    <line x1={fret_x1} y1={y_coords[0]} x2={fret_x2} y2={y_coords[0]} style={{stroke: 'gold', width: '10'}}></line>\r\n                    <line x1={fret_x1} y1={y_coords[1]} x2={fret_x2} y2={y_coords[1]} style={{stroke: 'gold', width: '10'}}></line>\r\n                    <line x1={fret_x1} y1={y_coords[2]} x2={fret_x2} y2={y_coords[2]} style={{stroke: 'gold', width: '10'}}></line>\r\n                    <line x1={fret_x1} y1={y_coords[3]} x2={fret_x2} y2={y_coords[3]} style={{stroke: 'gold', width: '10'}}></line>\r\n                    <line x1={fret_x1} y1={y_coords[4]} x2={fret_x2} y2={y_coords[4]} style={{stroke: 'gold', width: '10'}}></line>\r\n                    <line x1={fret_x1} y1={y_coords[5]} x2={fret_x2} y2={y_coords[5]} style={{stroke: 'gold', width: '10'}}></line>\r\n                    \r\n                    <line x1={x_coords[5]} y1='0%' x2={x_coords[5]} y2='100%' style={{stroke: 'white', width: '10'}}></line>\r\n                    <line x1={x_coords[4]} y1='0%' x2={x_coords[4]} y2='100%' style={{stroke: 'white', width: '10px'}}></line>\r\n                    <line x1={x_coords[3]} y1='0%' x2={x_coords[3]} y2='100%' style={{stroke: 'white', width: '10px'}}></line>\r\n                    <line x1={x_coords[2]} y1='0%' x2={x_coords[2]} y2='100%' style={{stroke: 'white', width: '10px'}}></line>\r\n                    <line x1={x_coords[1]} y1='0%' x2={x_coords[1]} y2='100%' style={{stroke: 'white', width: '10px'}}></line>\r\n                    <line x1={x_coords[0]} y1='0%' x2={x_coords[0]} y2='100%' style={{stroke: 'white', width: '10px'}}></line>\r\n                    <circle cx= {x_coord} cy={y_coord} r={radius_str} fill='yellow'></circle>\r\n                </svg>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChordTab;","import React, { Component } from 'react';\r\nimport store from './store/index.js';\r\nimport {connect} from 'react-redux';\r\nimport ChordTab from './chordTab.js';\r\nimport {\r\n} from './actions/index.js'\r\nimport PropTypes from 'prop-types'; // data validation\r\nimport {A, \r\n    B, \r\n    C, \r\n    D, \r\n    E, \r\n    F, \r\n    G,\r\n    SHARP,\r\n    NATURAL,\r\n    FLAT} from './constants/music.js';\r\n\r\nclass ChordViz extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    render() {\r\n        /*let string_number = 6;\r\n        let string_span = 100/(string_number + 1);\r\n\r\n        let x_coords = [];\r\n        for (let i = 0; i < string_number; i++) {\r\n            x_coords.push(((i+1) * string_span) +'%');\r\n        }\r\n        let fret_number = 5;\r\n        let fret_span =  100/(fret_number + 1);\r\n        let y_coords = [];\r\n        for (let i = 0; i < fret_number + 1; i++) {\r\n            y_coords.push(((i+1) * fret_span) + '%');\r\n        }\r\n        let fret_x1 = (fret_span - 7) + '%'\r\n        let fret_x2 = ((fret_span * (string_number-1)) + 7) + '%';\r\n\r\n        let circle_radius = (string_span / 2.1);\r\n        let radius_str = circle_radius +'%';\r\n        let x_coord = string_span*3 + '%'string_span * 6 + '%';\r\n        let y_coord = fret_span*5 + '%';\r\n        \r\n        console.log('x*************************')\r\n        console.log (x_coords);\r\n        console.log(x_coord);\r\n        console.log('y**********************')\r\n        console.log(y_coord);\r\n        console.log(y_coords);*/\r\n\r\n        return(\r\n                <svg id='the-svg' style={{width:'70%', height:'70%', border: '2px solid red', viewbox: '0 0 70% 70%'}}>\r\n                    <ChordTab />\r\n                </svg>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChordViz;","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport Header from './Header.js';\nimport Cards, {Card1, Card2, Card3} from './Cards.js';\nimport Tabs from './Tabs.js';\nimport Selector from './Selector.js';\nimport DCPanel from './defineChordPanel.js';\nimport ChordViz from './chordViz.js';\nimport './App.css';\n\nconst letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\nlet letter_options = letters.map(opt => ({label: opt, value: opt}));\n\nclass App extends Component {\n  render() {\n    console.log(window.innerHeight);\n    return (\n      <div className=\"Wrapper\">\n        <Header />\n        <div id='topCardHolder'>\n        </div>\n        <div id=\"chordBackdrop\">\n          <ChordViz />\n        </div>\n        <div id=\"slide\">\n          <div id='spacer'></div>\n          <div id='triHolder'>\n            <div id='triangle'></div>\n          </div>\n          <div id='description'>\n            <Selector />\n            <Tabs>\n              <div id='define' label='Define Chord'>\n                <DCPanel />\n              </div>\n              <div id='set' label='Set Note'>\n                <input></input>\n                <button>Submit</button>\n              </div>\n              <div id='search' label='Search Space'>\n                <div>\n                  <label>Low Fret: </label>\n                  <input></input>\n                </div>\n                <div>\n                  <label>High Fret: </label>\n                  <input></input>\n                </div>\n                <button>Submit</button>\n              </div> \n            </Tabs>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n/*\n          <div id='botCardHolder'>\n            <Card2 />\n          </div>\n*/\n/*\n<div id='panelWrap'>\n<div id='panel1'>\n  <div id='root'></div>\n  <div id='mode'></div>\n  <div id='triad'></div>\n  <div id='extensions'></div>\n</div>\n<div id='panel2' className='hide'></div>\n<div id='panel3' className='hide'></div>\n</div>\n<ul id='panelNav'>\n<li><h6>Chord<br/>Description</h6></li>\n<li><h6>Set<br/>Note</h6></li>\n<li><h6>Search<br/>Space</h6></li>\n</ul>\n*/\n\n/*\n                  <Select \n                    options={letter_options}\n                    onChange={opt => console.log(opt.value)}\n                    className={'root'}\n                    classNamePrefix={'rooter'}\n                    styles={\n                      {option: (state) => ({\n                        borderBottom: '2px solid red',\n                        height: '50%',\n                        color: 'black',\n                      }),\n                      valueContainer:(state) => ({\n                        overflow: 'scroll',\n                      })\n\n                    }\n                    }\n\n                  /> */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store/index.js';\nimport { Provider } from 'react-redux';\n/*import ADD_CHORD from \"./actionTypes/index\";*/\n\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App /> \n    </Provider>,\n    document.getElementById('root')\n    \n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}