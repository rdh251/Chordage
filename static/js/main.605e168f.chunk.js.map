{"version":3,"sources":["Header.js","Cards.js","Tab.js","Tabs.js","Selector.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Card1","id","Tab","onClick","_this$props","_this","props","label","this","_this$props2","activeTab","label_arr","split","Tabs","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClickTabItem","tab","setState","state","children","map","child","src_Tab","key","Selector","items","activeIndex","handleScroll","bind","assertThisInitialized","el","document","getElementById","scrollOffset","scrollLeft","itemWidth","offsetWidth","i","console","log","onScroll","letter_options","opt","value","App","window","innerHeight","src_Header","Cards_Card1","src_Selector","src_Tabs","react_select_es","options","onChange","classNamePrefix","styles","option","borderBottom","height","color","valueContainer","overflow","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.605e168f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <h1>Chordage</h1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Card1 extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"card1\" className=\"card\"></div>\r\n        );\r\n    }\r\n}\r\nclass Card2 extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"card2\" className=\"card\"></div>\r\n        );\r\n    }\r\n}\r\nclass Card3 extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"card3\" className=\"card\"></div>\r\n        );\r\n    }\r\n}\r\nexport {\r\n    Card1,\r\n    Card2,\r\n    Card3\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'; // data validation\r\n\r\n// FROM:\r\n// https://alligator.io/react/tabs-component/\r\nclass Tab extends Component {\r\n    static propTypes = {\r\n        activeTab: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n    }\r\n    onClick = () => {\r\n        const {label, onClick} = this.props;\r\n        onClick(label);\r\n    }\r\n     \r\n    render() {\r\n        const {\r\n            onClick,\r\n            props: {\r\n                activeTab,\r\n                label,\r\n            },\r\n        } = this;\r\n        let label_arr = label.split(' ');\r\n        \r\n        let className = 'tab-list-item';\r\n\r\n        if (activeTab === label) {\r\n            className += ' tab-list-active';\r\n        }\r\n\r\n        return (\r\n            <li\r\n                className = {className}\r\n                onClick = {onClick}\r\n            ><h6>{label_arr[0]}<br/>{label_arr[1]}</h6></li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tab;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'; // data validation\r\n\r\nimport Tab from './Tab';\r\n\r\n// FROM: \r\n// https://alligator.io/react/tabs-component/\r\nclass Tabs extends Component {\r\n    static propTypes = {\r\n        children: PropTypes.instanceOf(Array).isRequired,\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: this.props.children[0].props.label\r\n        };\r\n    }\r\n\r\n    onClickTabItem = (tab) => {\r\n        this.setState({activeTab: tab});\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            onClickTabItem,\r\n            props: {\r\n                children,\r\n            },\r\n            state: {\r\n                activeTab,\r\n            }\r\n        } = this;\r\n\r\n        return (\r\n            <div className = 'tabs'>\r\n                <div className='tab-content'>\r\n                    {children.map((child) => {\r\n                        if (child.props.label !== activeTab) {\r\n                            return undefined;\r\n                        }\r\n                        return child.props.children;\r\n                    })}\r\n                </div>\r\n                <ol className = 'tab-list'>\r\n                    {children.map((child) => {\r\n                        const { label} = child.props;\r\n                        return (\r\n                            <Tab\r\n                                activeTab = {activeTab}\r\n                                key = {label}\r\n                                label = {label}\r\n                                onClick = {onClickTabItem}\r\n                            />\r\n                        );\r\n                    })}\r\n                </ol>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Tabs;","import React, { Component } from 'react';\r\n\r\nclass Selector extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: 8,\r\n            activeIndex: 0\r\n        }\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n    }\r\n    handleScroll() {\r\n        let el = document.getElementById('chordHolder')\r\n        let scrollOffset = el.scrollLeft;\r\n        let itemWidth = el.offsetWidth / 3.0;\r\n        let i = 0;\r\n        while((i) * itemWidth <= scrollOffset - (itemWidth/2.0)) {\r\n            i++;\r\n        }\r\n        this.state.activeIndex = i;\r\n        console.log(this.state.activeIndex);\r\n        console.log(this.props.children);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <ul id='chordHolder' onScroll={this.handleScroll}>\r\n            <li></li>\r\n            <li>item 0</li>\r\n            <li>item 1</li>\r\n            <li>item 2</li>\r\n            <li>item 3</li>\r\n            <li>item 4</li>\r\n            <li>item 5</li>\r\n            <li>item 6</li>\r\n            <li>item 7</li>\r\n            <li></li>\r\n          </ul>\r\n        );\r\n    }\r\n}\r\nexport default Selector;\r\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport Header from './Header.js';\nimport Cards, {Card1, Card2, Card3} from './Cards.js';\nimport Tabs from './Tabs.js';\nimport Selector from './Selector.js'\nimport './App.css';\n\nconst letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];\nlet letter_options = letters.map(opt => ({label: opt, value: opt}));\n\nclass App extends Component {\n  render() {\n    console.log(window.innerHeight);\n    return (\n      <div className=\"Wrapper\">\n        <Header />\n        <div id='topCardHolder'>\n          <Card1 />\n        </div>\n        <div id=\"chordBackdrop\"></div>\n        <div id=\"slide\">\n          <div id='spacer'></div>\n          <div id='triHolder'>\n            <div id='triangle'></div>\n          </div>\n          <div id='description'>\n            <Selector />\n            <Tabs>\n              <div id='define' label='Define Chord'>\n                <div id='root'>\n                  <h3>Root:</h3>\n                  <Select \n                    options={letter_options}\n                    onChange={opt => console.log(opt.value)}\n                    className={'root'}\n                    classNamePrefix={'rooter'}\n                    styles={\n                      {option: (state) => ({\n                        borderBottom: '2px solid red',\n                        height: '50%',\n                        color: 'black',\n                      }),\n                      valueContainer:(state) => ({\n                        overflow: 'scroll',\n                      })\n\n                    }\n                    }\n\n                  />\n                </div>\n                <div id='mode'>\n                  <h3>Mode:</h3>\n                </div>\n                <div id='triad'>\n                  <h3>Triad:</h3>\n                  <ul id='tri-list'>\n                    <li>1</li>\n                    <li>3</li>\n                    <li>5</li>\n                  </ul>\n                </div>\n                <div id='extensions'>\n                  <h3>Ext:</h3>\n                  <ul id='ext-list'>\n                    <li>7</li>\n                    <li>9</li>\n                    <li>11</li>\n                    <li>13</li>\n                  </ul>\n                </div>\n              </div>\n              <div id='set' label='Set Note'>\n                In a while!\n              </div>\n              <div id='search' label='Search Space'>\n                Sticks!\n              </div> \n            </Tabs>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n/*\n          <div id='botCardHolder'>\n            <Card2 />\n          </div>\n*/\n/*\n<div id='panelWrap'>\n<div id='panel1'>\n  <div id='root'></div>\n  <div id='mode'></div>\n  <div id='triad'></div>\n  <div id='extensions'></div>\n</div>\n<div id='panel2' className='hide'></div>\n<div id='panel3' className='hide'></div>\n</div>\n<ul id='panelNav'>\n<li><h6>Chord<br/>Description</h6></li>\n<li><h6>Set<br/>Note</h6></li>\n<li><h6>Search<br/>Space</h6></li>\n</ul>\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}